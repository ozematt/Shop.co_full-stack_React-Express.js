services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root # Root user password
      MYSQL_DATABASE: shop_co_db # Database name to create on startup
      MYSQL_USER: user # Username
      MYSQL_PASSWORD: userpass # Password for user
    ports:
      - "3306:3306" # Port mapping (port on host -> port in container)
    volumes:
      - mysql-data:/var/lib/mysql # Volume usage for data storage
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "user",
          "-puserpass",
        ]
      interval: 10s # Check every 10 seconds
      timeout: 5s # Maximum waiting time for a response
      retries: 3 # Number of attempts before the container is deemed to be "unhealthy"
      start_period: 30s # Wait 30 seconds before running healthcheck (important for slower databases)

  backend:
    build: ./backend
    container_name: shop-co-backend
    environment:
      - DB_HOST=mysql-db
      - DB_USER=user
      - DB_PASSWORD=userpass
      - DB_NAME=shop_co_db
      - DB_PORT=3306
      - JWT_SECRET=my_password_very_very
      - NODE_ENV=development
      - BACKEND_PORT=3005
    ports:
      - "3005:3005" # Port Mapping for Node.js Apps
    depends_on:
      mysql:
        condition: service_healthy # Wait for MySQL to pass healthcheck
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: shop-co-frontend
    environment:
      - NODE_ENV=development
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules # Ensures proper functioning of dependencies
    networks:
      - app-network
    command: npm run dev # Launches Vite development server

volumes:
  mysql-data: # MySQL storage volume definition

networks:
  app-network:
    driver: bridge
